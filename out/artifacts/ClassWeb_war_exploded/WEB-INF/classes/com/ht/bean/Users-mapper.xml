<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ht.dao.UsersDAO">
    <resultMap type="users" id="usersMap">
        <id column="id" property="id"/>
        <result column="head" property="head"/>
        <result column="username" property="userName"/>
        <result column="password" property="password"/>
        <result column="idcard" property="idCard"/>
        <result column="address" property="address"/>
        <result column="qq" property="qq"/>
        <result column="phone" property="phone"/>
        <result column="wechat" property="weChat"/>
        <result column="age" property="age"/>
        <result column="birthday" property="birthday"/>
        <result column="gender" property="gender"/>
        <result column="nation" property="nation"/>
        <result column="residence" property="residence"/>
        <result column="parentname" property="parentName"/>
        <result column="parentphone" property="parentPhone"/>
        <result column="des" property="des"/>
        <result column="status" property="status"/>
        <result column="roleid" property="roleId"/>
        <collection property="writtens" ofType="com.ht.bean.Written">
            <id column="id" property="id"/>
            <result column="des" property="des"/>
            <result column="createtime" property="createTime"/>
        </collection>

    </resultMap>

    <select id="queryAll" resultMap="usersMap" parameterType="int">
        select * from t_user where status = 1 and id != #{sessionId} and id not in(select userid from t_user_role where roleid in(select id from t_roles where name in('teacher', 'classTeacher')))
    </select>

    <select id="queryById" parameterType="int" resultType="users">
        select * from t_user where id = #{id}
    </select>

    <insert id="insert" parameterType="users">
        insert into t_user(head,username,phone,password,idcard,
        address,qq,wechat,age,birthday,gender,nation,residence,
        parentname,parentphone,des,status) values(#{head},#{userName},#{phone},#{password},
        #{idCard},#{address},#{qq},#{weChat},#{age},#{birthday},#{gender},
        #{nation},#{residence},#{parentName},#{parentPhone},#{des},#{status})

        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <update id="update" parameterType="users">
        update t_user set head = #{head}, username = #{userName},
        phone = #{phone},idcard = #{idCard}, address = #{address}, qq = #{qq}, wechat = #{weChat},
        age = #{age}, birthday = #{birthday}, gender = #{gender}, nation = #{nation},
        residence = #{residence}, parentname = #{parentName}, parentphone = #{parentPhone},
        des = #{des},status = #{status}
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="int">
        delete from t_user where id = #{id}
    </delete>




    <select id="queryByPager" resultMap="usersMap">
        select * from t_user where 1 = 1
        <if test="users.name != null and users.name != ''">
            and name like concat('%', #{users.name}, '%')
        </if>
        <if test="users.price != null and users.price != ''">
            and price = #{users.price}
        </if>
        limit #{pager.beginIndex}, #{pager.pageSize}
    </select>

    <select id="count" resultType="int" parameterType="users">
        select count(id) from users where 1 = 1
        <if test="name != null and name != ''">
            and name like concat('%', #{name}, '%')
        </if>
        <if test="price != null and price != ''">
            and price = #{price}
        </if>
    </select>

    <select id="queryByPhone" parameterType="string" resultType="users">
        select * from t_user where phone = ${phone}
    </select>

    <update id="editPwd" parameterType="users">
        update t_user set password = #{password} where id = #{id}
    </update>
</mapper>